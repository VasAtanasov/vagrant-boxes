# -*- mode: ruby -*-
# vi: set ft=ruby :

include_vagrantfile = "../base.ubuntu.Vagrantfile"
load include_vagrantfile if File.exist?(include_vagrantfile)

VAGRANTFILE_API_VERSION = "2"

ubuntu_release = "20.04"
ubuntu_codenames = { "20.04" => "focal"} 

vm_name = "Ubuntu Docker #{ubuntu_release} (#{ubuntu_codenames[ubuntu_release]})"
vm_hostname = "ubuntu-docker"

# Location of the external files used by this script...
vagrant_assets = File.join(File.dirname(__FILE__), "/assets")

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.ssh.insert_key = false

  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provision :shell do |shell|
    shell.path = File.expand_path("../scripts/docker-dev/docker.sh")
  end
  
  config.vm.provision :shell do |shell|
    shell.env = { 'CURRENT_USER' => 'vagrant'}
    shell.path = File.expand_path("../scripts/docker-dev/docker-group.sh")
  end
  
  config.vm.provision :shell do |shell|
    shell.path = File.expand_path("../scripts/cleanup/cleanup.sh")
  end
  
  config.vm.provision :shell do |shell|
    shell.path = File.expand_path("../scripts/cleanup/minimize.sh")
  end
  
  config.vm.provision "file", source: "#{vagrant_assets}/check_docker_container.sh", destination: "/home/vagrant/bin/check-docker-container"  
  config.vm.provision "shell", inline: "chmod +x /home/vagrant/bin/*"  

  config.vm.provision "shell", inline: "echo -n > /home/vagrant/.hushlogin"  

  config.vm.provider :virtualbox do |vb, override|
    vb.name = vm_name

    # Override the console log location set by the base box...
    # console_log_file = File.join(File.dirname(__FILE__), "console.log")
    # vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
    # vb.customize ["modifyvm", :id, "--uartmode1", "file", console_log_file]

    # override.vm.synced_folder "#{vagrant_assets}", "/home/vagrant/shared"
  end 

end
